import Head from 'next/head';
import styles from "@/pages/styles.js"
import keyStyles from '@/styles/Keypad.module.css'
import {useState} from 'react'
import Image from 'next/image';
import Screen from './screen';
import Welcome from './welcome';
import Header from './header';
import Calc from '@/styles/Calc.module.css';
// import { Inter } from 'next/font/google'
// import styles from '@/styles/Home.module.css'

// const inter = Inter({ subsets: ['latin'] })

interface mainInter {
  disp: string,
  input: string
}

export default function Home() {
  const reset = ():void => {
    setMain({...main, disp:"", input:""})
  }

  const input = (num: string) => {
    if (/\.|\+|-|x|\//.test(num)){
      if (num === "."){
        /\./.test(main.input)? setMain({...main}) : setMain({...main, disp: main.disp + num, input: main.input + num})
      }
      else{
        setMain({...main, disp: main.disp + " " + num + " ", input:""})
      }
    }
    else{
      setMain({...main, disp: main.disp + num, input: main.input + num})
    }
    console.log(main)
  }

  const del = () => {
    let newDisp = main.disp
    // newDisp = newDisp.length == 1? "" : newDisp.slice(0, newDisp.length - 1)
    setMain({...main, disp: newDisp.slice(0, newDisp.length - 1)})
  }

  const equals = () => {
    let exp:string|null = main.disp
    let valDisp = /\.\d+(0+)$/
    exp = exp.replaceAll("x", "*")
    console.log(exp)
    let ans = Number(eval(exp))
    if (Number.isInteger(ans)){
      exp = ans.toString()
    }
    else{
      exp = ans.toFixed(10)
      exp = valDisp.test(exp)? exp.replace(/0+$/, ""):exp
    }
    setMain({...main, disp: exp, input: exp})
  }

  // create state
  const [main, setMain] = useState<mainInter>({
    disp: "",
    input: ""
  })

  //create a list of all available buttons
  const buttons = [
    {7: '7', 8:'8', 9: '9', del: 'DEL'},
    {4: '4', 5: '5', 6: '6', plus: '+'},
    {1: '1', 2: '2', 3: '3', minus: '-'},
    {dot: '.', 0: '0', div: '/', mul: 'x'},
    {reset: 'RESET', equals: '='}
  ]

  //turn the button list into JSX Elements
  const key = buttons.map(i => {
    let val: string[] = Object.values(i);
    const row = val.map(x => {
      switch(x){
        case "DEL": return <span className={keyStyles.del} onClick={del}>{x}</span>
        case "RESET": return <span onClick={reset} className={keyStyles.reset}>{x}</span>
        case "=": return <span onClick={equals} className={keyStyles.equals}>{x}</span>
        default: return <span onClick={() => input(x)}>{x}</span>
      }
    });
    return <div className={keyStyles.key}>{row}</div>;
  })
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=League+Spartan'/>
      </Head>

      <main className={Calc.main1}>
        <div className={Calc.container}>
          <Header />
          <Screen disp={main.disp}/>
          <section className={keyStyles.keypad}>
            {key}
          </section>
        </div>
      </main>

    </>
  )
}
